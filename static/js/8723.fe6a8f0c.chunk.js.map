{"version":3,"file":"static/js/8723.fe6a8f0c.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/action-group/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/action-group.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/action-group.scss?tag=calcite-action-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/functional/ExpandToggle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/action-bar.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/action-bar.scss?tag=calcite-action-bar&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts"],"sourcesContent":["export const SLOTS = {\n  menuActions: \"menu-actions\",\n  menuTooltip: \"menu-tooltip\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n};\n\nexport const CSS = {\n  container: \"container\",\n};\n","import { Component, Element, h, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { CalciteActionMenuCustomEvent } from \"../../components\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout, Scale } from \"../interfaces\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { Columns } from \"./interfaces\";\nimport { ActionGroupMessages } from \"./assets/action-group/t9n\";\nimport { ICONS, SLOTS, CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a group of `calcite-action`s.\n * @slot menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`.\n * @slot menu-tooltip - A slot for adding a `calcite-tooltip` for the menu.\n */\n@Component({\n  tag: \"calcite-action-group\",\n  styleUrl: \"action-group.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ActionGroup\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.menuOpen = false;\n  }\n\n  /**\n   *  Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * Indicates the layout of the component.\n   *\n   * @deprecated Use the `layout` property on the component's parent instead.\n   */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\" | \"grid\", Layout> = \"vertical\";\n\n  /**\n   * Indicates number of columns.\n   */\n  @Prop({ reflect: true }) columns: Columns;\n\n  /**\n   * When `true`, the `calcite-action-menu` is open.\n   */\n  @Prop({ reflect: true, mutable: true }) menuOpen = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Specifies the size of the `calcite-action-menu`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionGroupMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionGroupMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n  @Element() el: HTMLCalciteActionGroupElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionGroupMessages;\n\n  @State() hasMenuActions = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderMenu(): VNode {\n    const { expanded, menuOpen, scale, layout, messages, overlayPositioning, hasMenuActions } =\n      this;\n\n    return (\n      <calcite-action-menu\n        expanded={expanded}\n        flipPlacements={[\"left\", \"right\"]}\n        hidden={!hasMenuActions}\n        label={messages.more}\n        onCalciteActionMenuOpen={this.setMenuOpen}\n        open={menuOpen}\n        overlayPositioning={overlayPositioning}\n        placement={layout === \"horizontal\" ? \"bottom-start\" : \"leading-start\"}\n        scale={scale}\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          scale={scale}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.more}\n          textEnabled={expanded}\n        />\n        <slot name={SLOTS.menuActions} onSlotchange={this.handleMenuActionsSlotChange} />\n        <slot name={SLOTS.menuTooltip} slot={ACTION_MENU_SLOTS.tooltip} />\n      </calcite-action-menu>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <div aria-label={this.label} class={CSS.container} role=\"group\">\n        <slot />\n        {this.renderMenu()}\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  setMenuOpen = (event: CalciteActionMenuCustomEvent<void>): void => {\n    this.menuOpen = !!(event.target as HTMLCalciteActionMenuElement).open;\n  };\n\n  handleMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuActions = slotChangeHasAssignedElement(event);\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-group-columns: Sets number of grid-template-columns when the `layout` property is `\"grid\"`.\n * @prop --calcite-action-group-gap: Sets the gap (gutters) between rows and columns when the `layout` property is `\"grid\"`.\n * @prop --calcite-action-group-padding: Sets the padding when the `layout` property is `\"grid\"`.\n */\n\n:host {\n  @extend %component-host;\n\n  @apply flex\n  flex-col\n  p-0;\n\n  --calcite-action-group-columns: 3;\n  --calcite-action-group-gap: theme(\"gap.px\");\n  --calcite-action-group-padding: theme(\"padding.px\");\n}\n\n.container {\n  @apply flex flex-col flex-grow;\n}\n\n:host([columns=\"1\"]) {\n  --calcite-action-group-columns: 1;\n}\n:host([columns=\"2\"]) {\n  --calcite-action-group-columns: 2;\n}\n:host([columns=\"3\"]) {\n  --calcite-action-group-columns: 3;\n}\n:host([columns=\"4\"]) {\n  --calcite-action-group-columns: 4;\n}\n:host([columns=\"5\"]) {\n  --calcite-action-group-columns: 5;\n}\n:host([columns=\"6\"]) {\n  --calcite-action-group-columns: 6;\n}\n\n:host(:first-child) {\n  @apply pt-0;\n}\n\n:host([layout=\"horizontal\"]),\n:host([layout=\"horizontal\"]) .container {\n  @apply flex-row;\n}\n\n:host([layout=\"grid\"]) {\n  @apply grid;\n}\n\n:host([layout=\"grid\"]) .container {\n  @apply bg-background\n  grid\n  place-content-stretch;\n  gap: var(--calcite-action-group-gap);\n  padding: var(--calcite-action-group-gap);\n  grid-template-columns: repeat(var(--calcite-action-group-columns), auto);\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout } from \"../interfaces\";\n\nexport const overflowActionsDebounceInMs = 150;\nconst groupBufferPx = 2;\n\nconst getAverage = (arr: number[]) => arr.reduce((p, c) => p + c, 0) / arr.length;\n\nexport const geActionDimensions = (\n  actions: HTMLCalciteActionElement[],\n): { actionWidth: number; actionHeight: number } => {\n  const actionsNotSlotted = actions.filter((action) => action.slot !== ACTION_GROUP_SLOTS.menuActions);\n  const actionLen = actionsNotSlotted?.length;\n  return {\n    actionWidth: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientWidth || 0)) : 0,\n    actionHeight: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientHeight || 0)) : 0,\n  };\n};\n\nconst getMaxActionCount = ({\n  width,\n  actionWidth,\n  layout,\n  height,\n  actionHeight,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  height: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  groupCount: number;\n}): number => {\n  const maxContainerPx = layout === \"horizontal\" ? width : height;\n  const avgItemPx = layout === \"horizontal\" ? actionWidth : actionHeight;\n  return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);\n};\n\nexport const getOverflowCount = ({\n  layout,\n  actionCount,\n  actionWidth,\n  width,\n  actionHeight,\n  height,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  actionCount: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  height: number;\n  groupCount: number;\n}): number => {\n  return Math.max(actionCount - getMaxActionCount({ width, actionWidth, layout, height, actionHeight, groupCount }), 0);\n};\n\nexport const queryActions = (el: HTMLElement): HTMLCalciteActionElement[] => {\n  return Array.from(el.querySelectorAll(\"calcite-action\")).filter((action) =>\n    action.closest(\"calcite-action-menu\") ? action.slot === ACTION_MENU_SLOTS.trigger : true,\n  );\n};\n\nexport const overflowActions = ({\n  actionGroups,\n  expanded,\n  overflowCount,\n}: {\n  actionGroups: HTMLCalciteActionGroupElement[];\n  expanded: boolean;\n  overflowCount: number;\n}): void => {\n  let needToSlotCount = overflowCount;\n  actionGroups.reverse().forEach((group) => {\n    let slottedWithinGroupCount = 0;\n\n    const groupActions = queryActions(group).reverse();\n\n    groupActions.forEach((groupAction) => {\n      if (groupAction.slot === ACTION_GROUP_SLOTS.menuActions) {\n        groupAction.removeAttribute(\"slot\");\n        groupAction.textEnabled = expanded;\n      }\n    });\n\n    if (needToSlotCount > 0) {\n      groupActions.some((groupAction) => {\n        const unslottedActions = groupActions.filter((action) => !action.slot);\n\n        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest(\"calcite-action-menu\")) {\n          groupAction.textEnabled = true;\n          groupAction.setAttribute(\"slot\", ACTION_GROUP_SLOTS.menuActions);\n          slottedWithinGroupCount++;\n\n          if (slottedWithinGroupCount > 1) {\n            needToSlotCount--;\n          }\n        }\n\n        return needToSlotCount < 1;\n      });\n    }\n\n    forceUpdate(group);\n  });\n};\n","import { FunctionalComponent, h } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { queryActions } from \"../action-bar/utils\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { Position, Scale } from \"../interfaces\";\n\ninterface ExpandToggleProps {\n  expanded: boolean;\n  expandText: string;\n  collapseText: string;\n  expandLabel: string;\n  collapseLabel: string;\n  el: HTMLElement;\n  position: Position;\n  tooltip?: HTMLCalciteTooltipElement;\n  toggle: () => void;\n  ref?: (el: HTMLElement) => void;\n  scale?: Scale;\n}\n\nconst ICONS = {\n  chevronsLeft: \"chevrons-left\",\n  chevronsRight: \"chevrons-right\",\n};\n\nfunction getCalcitePosition(position: Position, el: HTMLElement): Position {\n  return position || el.closest(\"calcite-shell-panel\")?.position || \"start\";\n}\n\nexport function toggleChildActionText({\n  el,\n  expanded,\n}: {\n  el: HTMLElement;\n  expanded: boolean;\n}): void {\n  queryActions(el)\n    .filter((el) => el.slot !== ACTION_GROUP_SLOTS.menuActions)\n    .forEach((action) => (action.textEnabled = expanded));\n  el.querySelectorAll(\"calcite-action-group, calcite-action-menu\").forEach(\n    (el: HTMLCalciteActionMenuElement | HTMLCalciteActionGroupElement) => (el.expanded = expanded),\n  );\n}\n\nconst setTooltipReference = ({\n  tooltip,\n  referenceElement,\n  expanded,\n  ref,\n}: {\n  tooltip: HTMLCalciteTooltipElement;\n  referenceElement: HTMLCalciteActionElement;\n  expanded: boolean;\n  ref?: (el: HTMLElement) => void;\n}): HTMLCalciteActionElement => {\n  if (tooltip) {\n    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;\n  }\n\n  if (ref) {\n    ref(referenceElement);\n  }\n\n  return referenceElement;\n};\n\nexport const ExpandToggle: FunctionalComponent<ExpandToggleProps> = ({\n  expanded,\n  expandText,\n  collapseText,\n  expandLabel,\n  collapseLabel,\n  toggle,\n  el,\n  position,\n  tooltip,\n  ref,\n  scale,\n}) => {\n  const rtl = getElementDir(el) === \"rtl\";\n\n  const text = expanded ? collapseText : expandText;\n  const label = expanded ? collapseLabel : expandLabel;\n  const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];\n\n  if (rtl) {\n    icons.reverse();\n  }\n\n  const end = getCalcitePosition(position, el) === \"end\";\n  const expandIcon = end ? icons[1] : icons[0];\n  const collapseIcon = end ? icons[0] : icons[1];\n\n  const actionNode = (\n    <calcite-action\n      icon={expanded ? expandIcon : collapseIcon}\n      id=\"expand-toggle\"\n      label={label}\n      onClick={toggle}\n      ref={(referenceElement): HTMLCalciteActionElement =>\n        setTooltipReference({ tooltip, referenceElement, expanded, ref })\n      }\n      scale={scale}\n      text={text}\n      textEnabled={expanded}\n      title={!expanded && !tooltip ? text : null}\n    />\n  );\n\n  return actionNode;\n};\n","export const CSS = {\n  actionGroupEnd: \"action-group--end\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  bottomActions: \"bottom-actions\",\n  expandTooltip: \"expand-tooltip\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ExpandToggle, toggleChildActionText } from \"../functional/ExpandToggle\";\nimport { Layout, Position, Scale } from \"../interfaces\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { ActionBarMessages } from \"./assets/action-bar/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport {\n  geActionDimensions,\n  getOverflowCount,\n  overflowActions,\n  overflowActionsDebounceInMs,\n  queryActions,\n} from \"./utils\";\n\n/**\n * @slot - A slot for adding `calcite-action`s that will appear at the top of the component.\n * @slot bottom-actions - [Deprecated] Use the `\"actions-end\"` slot instead. A slot for adding `calcite-action`s that will appear at the bottom of the component, above the collapse/expand button.\n * @slot actions-end - A slot for adding `calcite-action`s that will appear at the end of the component, prior to the collapse/expand button.\n * @slot expand-tooltip - A slot to set the `calcite-tooltip` for the expand toggle.\n */\n@Component({\n  tag: \"calcite-action-bar\",\n  styleUrl: \"action-bar.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ActionBar\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the accessible label for the last `calcite-action-group`.\n   */\n  @Prop() actionsEndGroupLabel: string;\n\n  /**\n   * When `true`, the expand-toggling behavior is disabled.\n   */\n  @Prop({ reflect: true }) expandDisabled = false;\n\n  @Watch(\"expandDisabled\")\n  expandHandler(): void {\n    this.overflowActions();\n  }\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  /**\n   *  Specifies the layout direction of the actions.\n   */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\", Layout> = \"vertical\";\n\n  @Watch(\"layout\")\n  layoutHandler(): void {\n    this.updateGroups();\n  }\n\n  /**\n   * Disables automatically overflowing `calcite-action`s that won't fit into menus.\n   */\n  @Prop({ reflect: true }) overflowActionsDisabled = false;\n\n  @Watch(\"overflowActionsDisabled\")\n  overflowDisabledHandler(overflowActionsDisabled: boolean): void {\n    if (overflowActionsDisabled) {\n      this.resizeObserver?.disconnect();\n      return;\n    }\n\n    this.resizeObserver?.observe(this.el);\n    this.overflowActions();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Arranges the component depending on the element's `dir` property.\n   */\n  @Prop({ reflect: true }) position: Extract<\"start\" | \"end\", Position>;\n\n  /**\n   * Specifies the size of the expand `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionBarMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionBarMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `expanded` property is toggled.\n   */\n  @Event({ cancelable: false }) calciteActionBarToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionBarElement;\n\n  mutationObserver = createObserver(\"mutation\", () => {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  });\n\n  resizeObserver = createObserver(\"resize\", (entries) => this.resizeHandlerEntries(entries));\n\n  expandToggleEl: HTMLCalciteActionElement;\n\n  @State() effectiveLocale: string;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasBottomActions = false;\n\n  @State() expandTooltip: HTMLCalciteTooltipElement;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionBarMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    const { el, expanded } = this;\n\n    setComponentLoaded(this);\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  connectedCallback(): void {\n    const { el, expanded } = this;\n\n    connectLocalized(this);\n    connectMessages(this);\n    toggleChildActionText({ el, expanded });\n\n    this.mutationObserver?.observe(el, { childList: true, subtree: true });\n\n    if (!this.overflowActionsDisabled) {\n      this.resizeObserver?.observe(el);\n    }\n\n    this.overflowActions();\n    connectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Overflows actions that won't fit into menus.\n   *\n   * @internal\n   */\n  @Method()\n  async overflowActions(): Promise<void> {\n    this.resize({ width: this.el.clientWidth, height: this.el.clientHeight });\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  actionMenuOpenHandler = (event: CustomEvent<void>): void => {\n    if ((event.target as HTMLCalciteActionGroupElement).menuOpen) {\n      const composedPath = event.composedPath();\n      Array.from(this.el.querySelectorAll(\"calcite-action-group\")).forEach((group) => {\n        if (!composedPath.includes(group)) {\n          group.menuOpen = false;\n        }\n      });\n    }\n  };\n\n  resizeHandlerEntries = (entries: ResizeObserverEntry[]): void => {\n    entries.forEach(this.resizeHandler);\n  };\n\n  resizeHandler = (entry: ResizeObserverEntry): void => {\n    const { width, height } = entry.contentRect;\n    this.resize({ width, height });\n  };\n\n  private resize = debounce(({ width, height }: { width: number; height: number }): void => {\n    const { el, expanded, expandDisabled, layout, overflowActionsDisabled } = this;\n\n    if (\n      overflowActionsDisabled ||\n      (layout === \"vertical\" && !height) ||\n      (layout === \"horizontal\" && !width)\n    ) {\n      return;\n    }\n\n    const actions = queryActions(el);\n    const actionCount = expandDisabled ? actions.length : actions.length + 1;\n    const actionGroups = Array.from(el.querySelectorAll(\"calcite-action-group\"));\n\n    this.setGroupLayout(actionGroups);\n\n    const groupCount =\n      this.hasActionsEnd || this.hasBottomActions || !expandDisabled\n        ? actionGroups.length + 1\n        : actionGroups.length;\n\n    const { actionHeight, actionWidth } = geActionDimensions(actions);\n\n    const overflowCount = getOverflowCount({\n      layout,\n      actionCount,\n      actionHeight,\n      actionWidth,\n      height,\n      width,\n      groupCount,\n    });\n\n    overflowActions({\n      actionGroups,\n      expanded,\n      overflowCount,\n    });\n  }, overflowActionsDebounceInMs);\n\n  toggleExpand = (): void => {\n    this.expanded = !this.expanded;\n    this.calciteActionBarToggle.emit();\n  };\n\n  setExpandToggleRef = (el: HTMLCalciteActionElement): void => {\n    this.expandToggleEl = el;\n  };\n\n  updateGroups(): void {\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\")));\n  }\n\n  setGroupLayout(groups: HTMLCalciteActionGroupElement[]): void {\n    groups.forEach((group) => (group.layout = this.layout));\n  }\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const groups = slotChangeGetAssignedElements(event).filter((el) =>\n      el.matches(\"calcite-action-group\"),\n    ) as HTMLCalciteActionGroupElement[];\n\n    this.setGroupLayout(groups);\n  };\n\n  handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  handleBottomActionsSlotChange = (event: Event): void => {\n    this.hasBottomActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = slotChangeGetAssignedElements(event).filter((el) =>\n      el?.matches(\"calcite-tooltip\"),\n    ) as HTMLCalciteTooltipElement[];\n\n    this.expandTooltip = tooltips[0];\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBottomActionGroup(): VNode {\n    const {\n      expanded,\n      expandDisabled,\n      el,\n      position,\n      toggleExpand,\n      scale,\n      layout,\n      messages,\n      actionsEndGroupLabel,\n      overlayPositioning,\n    } = this;\n\n    const expandToggleNode = !expandDisabled ? (\n      <ExpandToggle\n        collapseLabel={messages.collapseLabel}\n        collapseText={messages.collapse}\n        el={el}\n        expandLabel={messages.expandLabel}\n        expandText={messages.expand}\n        expanded={expanded}\n        position={position}\n        ref={this.setExpandToggleRef}\n        scale={scale}\n        toggle={toggleExpand}\n        tooltip={this.expandTooltip}\n      />\n    ) : null;\n\n    return (\n      <calcite-action-group\n        class={CSS.actionGroupEnd}\n        hidden={this.expandDisabled && !(this.hasActionsEnd || this.hasBottomActions)}\n        label={actionsEndGroupLabel}\n        layout={layout}\n        overlayPositioning={overlayPositioning}\n        scale={scale}\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        <slot name={SLOTS.bottomActions} onSlotchange={this.handleBottomActionsSlotChange} />\n        <slot name={SLOTS.expandTooltip} onSlotchange={this.handleTooltipSlotChange} />\n        {expandToggleNode}\n      </calcite-action-group>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host onCalciteActionMenuOpen={this.actionMenuOpenHandler}>\n        <slot onSlotchange={this.handleDefaultSlotChange} />\n        {this.renderBottomActionGroup()}\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-bar-expanded-max-width: When `layout` is `\"vertical\"`, specifies the expanded max width of the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply pointer-events-auto\n    inline-flex\n    self-stretch;\n  --calcite-action-bar-expanded-max-width: auto;\n}\n\n:host([layout=\"vertical\"]) {\n  @apply flex-col;\n  .action-group--end {\n    margin-block-start: auto;\n  }\n}\n\n:host([layout=\"horizontal\"]) {\n  @apply flex-row;\n  .action-group--end {\n    @apply ms-auto;\n  }\n}\n\n:host([layout=\"vertical\"][overflow-actions-disabled]) {\n  overflow-y: auto;\n}\n\n:host([layout=\"horizontal\"][overflow-actions-disabled]) {\n  overflow-x: auto;\n}\n\n:host([layout=\"vertical\"][expanded]) {\n  max-inline-size: var(--calcite-action-bar-expanded-max-width);\n}\n\n::slotted(calcite-action-group) {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n:host([layout=\"horizontal\"]) ::slotted(calcite-action-group) {\n  border-block-end: 0;\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n}\n\n:host([layout=\"horizontal\"][expand-disabled]) ::slotted(calcite-action-group:last-of-type) {\n  border-inline-end: 0;\n}\n\n::slotted(calcite-action-group:last-child) {\n  border-block-end: 0;\n  border-inline-end: 0;\n}\n\n.action-group--end {\n  @apply justify-end;\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n"],"names":["SLOTS","menuActions","menuTooltip","ICONS","CSS","ActionGroup","proxyCustomElement","HTMLElement","setMenuOpen","event","this","menuOpen","target","open","handleMenuActionsSlotChange","hasMenuActions","slotChangeHasAssignedElement","expandedHandler","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","el","focus","connectedCallback","connectLocalized","connectMessages","connectConditionalSlotComponent","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","renderMenu","expanded","scale","layout","messages","overlayPositioning","h","flipPlacements","hidden","label","more","onCalciteActionMenuOpen","placement","icon","slot","SLOTS$1","trigger","text","textEnabled","name","onSlotchange","tooltip","render","key","class","role","getAverage","arr","reduce","p","c","length","getOverflowCount","_ref2","actionCount","actionWidth","width","actionHeight","height","groupCount","Math","max","_ref","maxContainerPx","avgItemPx","floor","getMaxActionCount","queryActions","Array","from","querySelectorAll","filter","action","closest","toggleChildActionText","_ref4","forEach","ExpandToggle","_ref6","expandText","collapseText","expandLabel","collapseLabel","toggle","position","ref","rtl","getElementDir","icons","reverse","end","_el$closest","getCalcitePosition","expandIcon","collapseIcon","actionNode","id","onClick","referenceElement","_ref5","setTooltipReference","title","ActionBar","mutationObserver","createObserver","overflowActions","resizeObserver","entries","resizeHandlerEntries","actionMenuOpenHandler","composedPath","group","includes","resizeHandler","entry","contentRect","resize","debounce","expandDisabled","overflowActionsDisabled","actions","actionGroups","setGroupLayout","hasActionsEnd","hasBottomActions","actionsNotSlotted","actionLen","map","clientWidth","clientHeight","geActionDimensions","_ref3","overflowCount","needToSlotCount","slottedWithinGroupCount","groupActions","groupAction","removeAttribute","some","unslottedActions","setAttribute","forceUpdate","toggleExpand","calciteActionBarToggle","emit","setExpandToggleRef","expandToggleEl","handleDefaultSlotChange","groups","slotChangeGetAssignedElements","matches","handleActionsEndSlotChange","handleBottomActionsSlotChange","handleTooltipSlotChange","tooltips","expandTooltip","expandHandler","layoutHandler","updateGroups","overflowDisabledHandler","_this$resizeObserver2","_this$resizeObserver","disconnect","observe","_this$mutationObserve","_this$resizeObserver3","childList","subtree","_this$mutationObserve2","_this$resizeObserver4","focusFirstTabbable","renderBottomActionGroup","actionsEndGroupLabel","expandToggleNode","collapse","expand","Host","observerOptions","component","processMutations","unobserve","mutations"],"sourceRoot":""}